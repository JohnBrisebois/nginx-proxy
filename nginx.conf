events {}

http {

    server {
        listen 80 default_server;
        server_name _;

        return 444;  # Nginx's special "connection closed without response"
    }

    server {
        listen 443 ssl default_server;
        server_name _;

        ssl_certificate     /etc/nginx/ssl/dummy.crt;
        ssl_certificate_key /etc/nginx/ssl/dummy.key;

        return 403;
    }

    server {
        listen 80;
        server_name johnbrisebois.com www.johnbrisebois.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name johnbrisebois.com www.johnbrisebois.com;

        ssl_certificate /etc/letsencrypt/live/johnbrisebois.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/johnbrisebois.com/privkey.pem;

        location / {
            proxy_pass         http://johnbrisebois.com:8080;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
    server {
        listen 80;
        server_name cctv.johnbrisebois.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }
    server {
        listen 443 ssl;
        server_name cctv.johnbrisebois.com;

        ssl_certificate /etc/letsencrypt/live/cctv.johnbrisebois.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cctv.johnbrisebois.com/privkey.pem;

        location / {
            proxy_pass         http://frigate:8971;  # Frigate's container name + port
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }



}